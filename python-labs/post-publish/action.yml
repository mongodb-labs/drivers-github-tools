
name: Python Labs Post-Publish
description: Perform post-release operations for Python Libraries in MongoDB Labs
inputs:
  following_version:
    description: The following (dev) version
    required: false
  product_name:
    description: The name of the product
    required: true
  version_bump_script:
    description: The version bump script
    default: hatch version
  working_directory:
    description: The working directory for the action
    default: "."
  tag_template:
    description: The template for the git tag
    default: "${VERSION}"
  repository-url:
    description: The PyPI repository URL to use
    default: https://upload.pypi.org/legacy/
  token:
    description: The GitHub access token
  dry_run:
    description: Whether this is a dry run
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install hatch
      shell: bash
      run: pipx install hatch
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: all-dist-${{ github.run_id }}
        path: dist/
    - name: Get the package version
      shell: bash
      run: |
        # Handle version already bumped
        if [ -z "$VERSION" ]; then
          # Extract the version from the sdist name, which must be of the form
          # {name}-{version}.tar.gz according to PEP 625.
          VERSION=$(ls dist/*.tar.gz | rev | cut -d'-' -f 1 | rev | sed 's/.tar.gz//g')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        else
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        fi
    - name: Run GitHub Publish script
      shell: bash
      id: publish-script
      run: ${{ github.action_path }}/post-publish.sh
      env:
        GH_TOKEN: ${{ inputs.token }}
        VERSION: ${{ env.VERSION }}
        TAG_TEMPLATE: ${{ inputs.tag_template }}
        PRODUCT_NAME: ${{ inputs.product_name }}
        DRY_RUN: ${{ inputs.dry_run }}
        FOLLOWING_VERSION: ${{ inputs.following_version }}
    - name: Ensure a clean repo
      shell: bash
      run: |
        git clean -dffx
        git pull origin ${GITHUB_REF}
    - name: Set following version
      uses: mongodb-labs/drivers-github-tools/bump-version@v2
      if: inputs.dry_run == 'false'
      with:
          version: ${{ steps.publish-script.outputs.following_version }}
          version_bump_script: ${{ inputs.version_bump_script }}
          working_directory: ${{ inputs.working_directory }}
    - name: Skip Setting following version
      shell: bash
      if: inputs.dry_run == 'true'
      run: |
        echo "Dry run, not setting the following version: ${{ steps.publish-script.outputs.following_version }}" >> $GITHUB_STEP_SUMMARY
