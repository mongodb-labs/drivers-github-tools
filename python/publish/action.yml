
name: Publish Python
description: "Publish Assets and Report"
inputs:
  version:
    description: "The published version"
    required: true
  post_version:
    description: "The post version"
    required: true
  version_bump_script:
    description: "The version bump script"
    required: true
  product_name:
    description: "The name of the product"
    required: true
  token:
    description: "The GitHub access token"
    required: true
  dry_run:
    description: "Whether this is a dry run"
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: all-dist-${{ github.run_id }}
        path: dist/
    - name: Create detached signature for dist files
      uses: ./.github/actions/gpg-sign
      with:
        filenames: dist/*
    - uses: ./.github/actions/authorized-pub
      with:
        product_name: ${{ inputs.product_name }}
        release_version: ${{ inputs.version }}
        filenames: dist/*
        token: ${{ inputs.token }}
    - name: Run publish script
      shell: bash
      run: ${{github.action_path}}/publish.sh
      env:
        GH_TOKEN: ${{ inputs.token }}
        VERSION: ${{ inputs.version }}
        PRODUCT_NAME: ${{ inputs.product_name }}
        DRY_RUN: ${{ inputs.dry_run }}
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi
    # - name: Publish distribution ðŸ“¦ to PyPI
    #   if: inputs.dry_run == 'false'
    #   uses: pypa/gh-action-pypi-publish@release/v1
    - name: Set post version
      shell: bash -eux {0}
      run: |
        git clean -dffx
        bash ${{ inputs.version_bump_script }} ${{ inputs.version }}
    - name: Commit the version bump
      uses: ./.github/actions/git-sign
      with:
        command: git commit -a -m \"BUMP ${{ inputs.post_version }}\" -s --gpg-sign=${{ env.GPG_KEY_ID }}
    - name: Push the commit to the source branch
      shell: bash -eux {0}
      run: |
        if [ ${{ inputs.dry_run }} != "true" ]; then
          git push origin --tags
        fi
