
name: Publish Python
description: Publish Assets and Report
inputs:
  version:
    description: The published version
    required: true
  following_version:
    description: The following (dev) version
    required: true
  version_bump_script:
    description: The version bump script
    default: hatch version
  product_name:
    description: The name of the product
    required: true
  silk_asset_group:
    description: The Silk Asset Group for the Project
    required: true
  token:
    description: The GitHub access token
  dry_run:
    description: Whether this is a dry run
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install hatch
      shell: bash
      run: pipx install hatch
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: all-dist-${{ github.run_id }}
        path: dist/
    - name: Create detached signature for dist files
      uses: mongodb-labs/drivers-github-tools/gpg-sign@v2
      with:
        filenames: dist/*
    - uses: mongodb-labs/drivers-github-tools/full-report@v2
      with:
        product_name: ${{ inputs.product_name }}
        release_version: ${{ inputs.version }}
        dist_filenames: dist/*
        silk_asset_group: ${{ inputs.silk_asset_group }}
        token: ${{ inputs.token }}
    - uses: mongodb-labs/drivers-github-tools/upload-s3-assets@v2
      with:
          version: ${{ inputs.version }}
          product_name: ${{ inputs.product_name }}
          dry_run: ${{ inputs.dry_run }}
    - name: Run GitHub Publish script
      shell: bash
      id: publish-script
      run: ${{ github.action_path }}/publish.sh
      env:
        GH_TOKEN: ${{ inputs.token }}
        VERSION: ${{ inputs.version }}
        PRODUCT_NAME: ${{ inputs.product_name }}
        DRY_RUN: ${{ inputs.dry_run }}
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi
    - name: Publish distribution ðŸ“¦ to PyPI
      if: inputs.dry_run == 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
    - name: Ensure a clean repo
      shell: bash
      run: |
        git clean -dffx
        git pull origin ${GITHUB_REF}
    - name: Set following version
      uses: mongodb-labs/drivers-github-tools/bump-version@v2
      with:
          version: ${{ inputs.following_version }}
          version_bump_script: ${{ inputs.version_bump_script }}
          push_changes: ${{ steps.publish-script.output.push_changes }}
